version = "1.0"
webhooks = []

# bilive Settings
[model]
model_type = "append" # Can be pipeline, append, merge

# WARNING!: If you choose "deploy" local inference:
# 1. Please check the VRAM requirements twice!
# 2. Please make sure you have installed the Nvidia GPU driver and can check the cuda via `nvcc -V`!
# WARNING!: If you choose "api":
# due to the limitation of free tier, you should keep every video less than 30 minutes(around)
# which means your MODEL_TYPE should not be "merge".
[asr]
asr_method = "none" # can be "deploy" or "api" or "none"
whisper_api_key = "" # Apply for your own API key at https://console.groq.com/keys
inference_model = "small" # If you choose "deploy", you should download the inference model from https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt

[video]
# You can change the title as you like, eg.
# f"{artist}直播回放-{date}-{title}" - Streamer直播回放-20250328-Live title
# f"{date}-{artist}直播回放" - 20250328-Streamer直播回放
title = "{artist}直播回放-{date}-{title}" # Key words: {artist}, {date}, {title}, {source_link}
description = "{artist}直播回放，直播间地址：{source_link} 内容仅供娱乐，直播中主播的言论、观点和行为均由主播本人负责，不代表录播员的观点或立场。" # Key words: {artist}, {date}, {title}, {source_link}
gift_price_filter = 1 # The gift whose price is less than this value will be filtered, unit: RMB
reserve_for_fixing = false # If encounter MOOV crash error, delete the video or reserve for fixing
upload_line = "auto" # The upload line to be used, default None is auto detect(recommended), if you want to specify, it can be "bldsa", "ws", "tx", "qn", "bda2".

[slice]
auto_slice = false # General control: true or false
slice_duration = 60 # better not exceed 300 seconds
slice_num = 2 # the number of slices
slice_overlap = 30 # the overlap of slices(seconds) see my package https://github.com/timerring/auto-slice-video for more details
slice_step = 1 # the step of slices(seconds)
min_video_size = 200 # The minimum video size to be sliced (MB)
mllm_model = "gemini" # the multi-model LLMs, can be "gemini" or "zhipu" or "qwen"
zhipu_api_key = "" # Apply for your own GLM-4v-Plus API key at https://www.bigmodel.cn/invite?icode=shBtZUfNE6FfdMH1R6NybGczbXFgPRGIalpycrEwJ28%3D
gemini_api_key = "" # Apply for your own Gemini API key at https://aistudio.google.com/app/apikey
qwen_api_key = "" # Apply for your own Qwen API key at https://bailian.console.aliyun.com/?apiKey=1

# blrec Settings
[[tasks]]
room_id = 173551
enable_monitor = true
enable_recorder = true

[output]
path_template = "{roomid}/{roomid}_{year}{month}{day}-{hour}-{minute}-{second}" # Don't change this
filesize_limit = 0
duration_limit = 1800
out_dir = "./Videos" # Don't change this

[logging]
log_dir = "./logs/blrec" # Don't change this
console_log_level = "INFO"
backup_count = 30

[bili_api]
base_api_urls = [ "https://api.bilibili.com",]
base_live_api_urls = [ "https://api.live.bilibili.com",]
base_play_info_api_urls = [ "https://api.live.bilibili.com",]

[header]
user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"
cookie = ""

[danmaku]
danmu_uname = false
record_gift_send = true
record_free_gifts = false
record_guard_buy = true
record_super_chat = true
save_raw_danmaku = true

[recorder]
stream_format = "flv"
recording_mode = "standard"
quality_number = 250
fmp4_stream_timeout = 10
read_timeout = 3
disconnection_timeout = 600
buffer_size = 32768
save_cover = false
cover_save_strategy = "dedup"

[postprocessing]
remux_to_mp4 = true
inject_extra_metadata = true
delete_source = "auto"

[space]
check_interval = 300
space_threshold = 10737418240
recycle_records = false

[email_notification]
began_message_type = "html"
began_message_title = ""
began_message_content = ""
ended_message_type = "html"
ended_message_title = ""
ended_message_content = ""
space_message_type = "html"
space_message_title = ""
space_message_content = ""
error_message_type = "html"
error_message_title = ""
error_message_content = ""
notify_began = true
notify_ended = true
notify_error = true
notify_space = true
enabled = false
src_addr = ""
dst_addr = ""
auth_code = ""
smtp_host = "smtp.163.com"
smtp_port = 465

[serverchan_notification]
began_message_type = "markdown"
began_message_title = ""
began_message_content = ""
ended_message_type = "markdown"
ended_message_title = ""
ended_message_content = ""
space_message_type = "markdown"
space_message_title = ""
space_message_content = ""
error_message_type = "markdown"
error_message_title = ""
error_message_content = ""
notify_began = true
notify_ended = true
notify_error = true
notify_space = true
enabled = false
sendkey = ""

[pushdeer_notification]
began_message_type = "markdown"
began_message_title = ""
began_message_content = ""
ended_message_type = "markdown"
ended_message_title = ""
ended_message_content = ""
space_message_type = "markdown"
space_message_title = ""
space_message_content = ""
error_message_type = "markdown"
error_message_title = ""
error_message_content = ""
notify_began = true
notify_ended = true
notify_error = true
notify_space = true
enabled = false
server = ""
pushkey = ""

[pushplus_notification]
began_message_type = "markdown"
began_message_title = ""
began_message_content = ""
ended_message_type = "markdown"
ended_message_title = ""
ended_message_content = ""
space_message_type = "markdown"
space_message_title = ""
space_message_content = ""
error_message_type = "markdown"
error_message_title = ""
error_message_content = ""
notify_began = true
notify_ended = true
notify_error = true
notify_space = true
enabled = false
token = ""
topic = ""

[telegram_notification]
began_message_type = "html"
began_message_title = ""
began_message_content = ""
ended_message_type = "html"
ended_message_title = ""
ended_message_content = ""
space_message_type = "html"
space_message_title = ""
space_message_content = ""
error_message_type = "html"
error_message_title = ""
error_message_content = ""
notify_began = true
notify_ended = true
notify_error = true
notify_space = true
enabled = false
token = ""
chatid = ""
server = ""

[bark_notification]
began_message_type = "markdown"
began_message_title = ""
began_message_content = ""
ended_message_type = "markdown"
ended_message_title = ""
ended_message_content = ""
space_message_type = "markdown"
space_message_title = ""
space_message_content = ""
error_message_type = "markdown"
error_message_title = ""
error_message_content = ""
notify_began = true
notify_ended = true
notify_error = true
notify_space = true
enabled = false
server = ""
pushkey = ""
